'''
외장함수, 파일 입출력
stream - 액체나 기체류가 흐르는 현상

스트림
데이터가 흐르는 / 흘러들어오는방향
데이터는 한방향으로만 흐른다


출력스트림- open("파일의 경로","w")
-데이터가 프로그램에서 바깥으로 나가는 스트림

입력스트림- open("파일의 경로", "r")
-데이터가 바깥에서 프로그램으로 들어오는 스트림


입/출력스트림을 파일로 향하게 하기 위해선?
open이라는 함수를 사용한다
open 함수를 사용해서 프로그램과 파일을 연결할 수있다.
open함수를 사용해서
프로그램과 파일을 입력 스트림으로 연결할 수 있고
open함수를 사용해서
프로그램과 파일을 출력스트림으로 연결할 수있다.
프로그램에 있는 데이터를 파일에 저장하겠다.


r = 읽기모드 - 파일의 내용을 읽을 수 만 있음
w =  쓰기모드 - 파일에 내용을 쓸수 있음
a = 추가모드 - 파일에 마지막에 새로운 데이터를 추가함

'''
#파일을 만드는게 아닌 만드는 기능 도 있다고 생각하자
#프로그램에 있는 데이터를 프로그램으로 내보내야하니까 내보낼 장소를 만든것임
#변수에 open 이 만들어주는 스트림을 저장
with open("C:/Users/ITPS/Desktop/test.txt","r") as file:
    contents = file.readlines()
    for text in contents :
        print(text)
#빅데이터 분석을 할때는 자료가 너무많기때문에 readlines는 잘 쓰지않고 readline을 주로쓴다
#readlines는 본격적인 개발하기전에 테스트할때 주로 사용을한다
'''
    while True :
        contents = file.readline()
        if contents == "" :
            break
        else:
            print(contents, end="")
'''
#파일에 있는 모든 데이터를 불러올 때
#for문은 끝이 명확하기때문에 모든데이터를 불러오기엔 적합하지 않다
#while문이 적합하다.
'''
while True :
    if 파일의 끝 :
        break
    else:
        contents = file.readline()
        print(contents, end="")
'''
#파일의 끝은 어떻게 구할까
#파일의 끝은 비어있는 문자열이다




#추가모드를 쓸때는 Run으로 실행시킬때마다 데이터가 추가된다
#write객체로 스트림을 열었으니 close객체로 닫아준다

#읽어 올때도 open모드를 읽기모드r로바꾸고  변수에 읽기위한 메서드를 호출하고 출력한다

#open을 새로운 파일을 생성하기위한 용도로 사용하면 안된다
#'w'모드에서 출력을 해버리면 컴퓨터가 새로운 파일을 만들어 버리기때문에
#데이터들이 다 날라가버린다
#open 모드를 제대로 사용하는게 굉장히굉장히 중요함!!!!!!!!!


file.close()
#팁!!!file.close는 코드를 작성하다보면 깜빡하는 경우가 많아서 미리 써놓고 코드를 작성하면 좋다
#이렇게 '파일'에 저장하는 이유는 프로그램을 끄더라도 데이터들을 영구히 저장하기 위함이다.


